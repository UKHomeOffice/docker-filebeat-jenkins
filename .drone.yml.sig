eyJhbGciOiJIUzI1NiJ9.LS0tCnBpcGVsaW5lOgogIGJ1aWxkX2ltYWdlOgogICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgaW1hZ2U6IGRvY2tlcjoxLjExCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGJ1aWxkIC10IGRvY2tlci1maWxlYmVhdC1qZW5raW5zIC4KICAgIHdoZW46CiAgICAgIGJyYW5jaDoKICAgICAgZXZlbnQ6IFt0YWcscHVzaF0KCiAgaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMQogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtkcm9uZV9maWxlYmVhdF9ib3QiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBkb2NrZXItZmlsZWJlYXQtamVua2lucyBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvZG9ja2VyLWZpbGViZWF0LWplbmtpbnM6JHtEUk9ORV9DT01NSVRfU0hBfQogICAgICAtIGRvY2tlciB0YWcgZG9ja2VyLWZpbGViZWF0LWplbmtpbnMgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2RvY2tlci1maWxlYmVhdC1qZW5raW5zOmxhdGVzdAogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9kb2NrZXItZmlsZWJlYXQtamVua2luczoke0RST05FX0NPTU1JVF9TSEF9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2RvY2tlci1maWxlYmVhdC1qZW5raW5zOmxhdGVzdAogICAgd2hlbjoKICAgICAgZXZlbnQ6IFt0YWcscHVzaF0KCiAgdGFnX3RvX3F1YXk6CiAgICBpbWFnZTogZG9ja2VyOjEuMTEKICAgIGVudmlyb25tZW50OgogICAgICAtIERPQ0tFUl9IT1NUPXRjcDovLzEyNy4wLjAuMToyMzc1CiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXU9InVraG9tZW9mZmljZWRpZ2l0YWwrZHJvbmVfZmlsZWJlYXRfYm90IiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgZG9ja2VyLWZpbGViZWF0LWplbmtpbnMgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2RvY2tlci1maWxlYmVhdC1qZW5raW5zOiR7RFJPTkVfVEFHfQogICAgICAtIGRvY2tlciBwdXNoIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9kb2NrZXItZmlsZWJlYXQtamVua2luczoke0RST05FX1RBR30KICAgIHdoZW46CiAgICAgIGV2ZW50OiBbdGFnXQoKc2VydmljZXM6CiAgZGluZDoKICAgIGltYWdlOiBkb2NrZXI6MS4xMS1kaW5kCiAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICBjb21tYW5kOgogICAgICAtICItcyIKICAgICAgLSAib3ZlcmxheSIK.rmyBIxW0gC6QtDLlklRI_HNbRQfJxWg6Q1o2YgUQl7Y